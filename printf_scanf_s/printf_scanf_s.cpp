

#include <iostream>

int main()
{
    
}




/*
                    printf() — для вывода информации
                    scanf() — для ввода информации.


 Общая форма записи функции printf():
 printf("СтрокаФорматов", объект1, объект2, ..., объектn);

 Управляющие символы не выводятся на экран, а управляют расположением выводимых символов. Отличительной чертой управляющего символа является наличие обратного слэша ‘\’ перед ним.

Основные управляющие символы:

‘\n’ — перевод строки;
‘\t’ — горизонтальная табуляция;
‘\v’ — вертикальная табуляция;
‘\b’ — возврат на символ;
‘\r’ — возврат на начало строки;
‘\a’ — звуковой сигнал.

Форматы нужны для того, чтобы указывать вид, в котором информация будет выведена на экран. Отличительной чертой формата является наличие символа процент ‘%’ перед ним:

%d — целое число типа int со знаком в десятичной системе счисления;
%u — целое число типа unsigned int;
%x — целое число типа int со знаком в шестнадцатеричной системе счисления;
%o — целое число типа int со знаком в восьмеричной системе счисления;
%hd — целое число типа short со знаком в десятичной системе счисления;
%hu — целое число типа unsigned short;
%hx — целое число типа short со знаком в шестнадцатеричной системе счисления;
%ld — целое число типа long int со знаком в десятичной системе счисления;
%lu — целое число типа unsigned long int;
%lx — целое число типа long int со знаком в шестнадцатеричной системе счисления;
%f — вещественный формат (числа с плавающей точкой типа float);
%lf — вещественный формат двойной точности (числа с плавающей точкой типа double);
%e — вещественный формат в экспоненциальной форме (числа с плавающей точкой типа float в экспоненциальной форме);
%c — символьный формат;
%s — строковый формат.



#include <stdio.h>
int main()
{
  int a = 5;
  float x = 2.78;
  printf("a=%d\n", a);
  printf("x=%f\n", x);
  getchar();
  return 0;
}
a = 5
x = 2.780000


Тот же самый код может быть представлен с использованием одного вызова printf:

#include <stdio.h>
int main()
{
  int a = 5;
  float x = 2.78;
  printf("a=%d\nx=%f\n", a, x);
  getchar();
  return 0;
}
**********************************************************************

При указании формата можно явным образом указать общее количество знакомест и количество знакомест, занимаемых дробной частью:

#include <stdio.h>
int main()
{
  float x = 1.2345;
  printf("x=%10.5f\n", x);
  getchar();
  return 0;
}
x = 1.23450

**********************************************************************************
 
#define _CRT_SECURE_NO_WARNINGS // для возможности использования scanf
#include <stdio.h>
#include <stdlib.h> // для перехода на русский язык
int main()
{
  float y;
  system("chcp 1251"); // переходим в консоли на русский язык
  system("cls");       // очищаем окно консоли
  printf("Введите y: "); // выводим сообщение
  scanf("%f", &y);     // вводим значения переменной y
  printf("Значение переменной y=%f", y); // выводим значение переменной y
  getchar(); getchar();
  return 0;
}

Введите y : 1.345
Значение переменной y = 1.345000

****************************************************************************

Функция scanf( ) является функцией незащищенного ввода, т.к. появилась она в ранних версиях языка Си. Поэтому чтобы разрешить работу данной функции в современных компиляторах необходимо в начало программы добавить строчку
 #define _CRT_SECURE_NO_WARNINGS


Другой вариант — воспользоваться функцией защищенного ввода scanf_s( ), которая появилась несколько позже, но содержит тот же самый список параметров.

#include <stdio.h>
int main()
{
  int a;
  printf("a = ");
  scanf_s("%d", &a);
  printf("a = %d",a);
  getchar(); getchar();
  return 0;
}





















































*/
























































































